use anchor_lang::prelude::*;
// use anchor_spl::token::*;
use pyth_client::{
  PriceType,
  PriceInfo,
  load_mapping,
  load_product,
  load_price
};

use solana_program::{
  pubkey::Pubkey
};

// Testing account
declare_id!("4338bCaJ8TjcNGmqhQs1FPHZsq2k4PQw15sgNXaEgogw");
const MINIMUM_HOLDOUT_SEC: u64 = 5;

#[program]
pub mod truesight_protocol {
    use super::*;
    use pyth_client;

    pub fn create_prediction(ctx: Context<CreatePrediction>, asset_name: String, direction: u64, holdout_period_sec: u64) -> ProgramResult {
        let prediction_record   = &mut ctx.accounts.prediction_record;

        // TODO: Trigger SPL token transfer to our DAO's betting wallet

        if holdout_period_sec >= MINIMUM_HOLDOUT_SEC {
            prediction_record.direction     = direction;
            prediction_record.expiry_date   = (holdout_period_sec as i64) + Clock::get().unwrap().unix_timestamp;
            prediction_record.asset         = asset_name;    

            // TODO: Record product account from Pyth.Network
            let prod_data = "1MOyoQIAAAACAAAA2QAAAPxWRgngkZXflD/c/4ma50SNWr6T5JBtuAmozrF+znlnBnN5bWJvbBFFcXVpdHkuVVMuUVFRL1VTRAphc3NldF90eXBlBkVxdWl0eQ5xdW90ZV9jdXJyZW5jeQNVU0QLZGVzY3JpcHRpb24aSU5WRVNDTyBRUVEgVFJVU1QgU0VSSUVTIDEEYmFzZQNRUVEHY291bnRyeQJVUwpjbXNfc3ltYm9sA1FRUQpjcXNfc3ltYm9sA1FRUQ1uYXNkYXFfc3ltYm9sas_bytes();
            let prod_acct = pyth_client::load_product( &prod_data ).unwrap();

            // TODO: Record price account from Pyth.Network
            let price_data =  "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_bytes();
            let pa = pyth_client::load_price( &price_data ).unwrap();
            let maybe_price = pa.get_current_price();

            match maybe_price {
                Some(p) => {
                    prediction_record.entry_price = p.price * 10^ i64::from(p.expo);    
                }
                None => {
                }                
              }            

                
            }

        Ok(())
    }

    pub fn validate_prediction(ctx: Context<ValidatePrediction>) -> ProgramResult {
        let prediction_record = &mut ctx.accounts.prediction_record;

        if prediction_record.asset != "" && 
            Clock::get().unwrap().unix_timestamp > prediction_record.expiry_date {

            prediction_record.validation_date = Clock::get().unwrap().unix_timestamp;

            // TODO: Check against Pyth.Network and determine if prediction was correct
            // prediction_record.validation_price   = PRICE_FROM_PYTH_NETWORK
            prediction_record.is_correct = true;            

            if prediction_record.is_correct {
                // TODO: Trigger SPL token transfer from our DAO's betting wallet
                // TODO: Write to web3.storage for permanent storage
            }
        }

        Ok(())
    }

    pub fn set_entry_price(ctx: Context<CreatePrediction>) -> ProgramResult {
        let prediction_record = &mut ctx.accounts.prediction_record;

        // let prod_pkey = Pubkey::new( &prod_akey.val );
        // let prod_data = clnt.get_account_data( &prod_pkey ).unwrap();

        // QQQ account - DevNet - account_pubkey = "Fwosgw2ikRvdzgKcQJwMacyczk3nXgoW3AtVtyVvXSAb"
        let prod_data = "1MOyoQIAAAACAAAA2QAAAPxWRgngkZXflD/c/4ma50SNWr6T5JBtuAmozrF+znlnBnN5bWJvbBFFcXVpdHkuVVMuUVFRL1VTRAphc3NldF90eXBlBkVxdWl0eQ5xdW90ZV9jdXJyZW5jeQNVU0QLZGVzY3JpcHRpb24aSU5WRVNDTyBRUVEgVFJVU1QgU0VSSUVTIDEEYmFzZQNRUVEHY291bnRyeQJVUwpjbXNfc3ltYm9sA1FRUQpjcXNfc3ltYm9sA1FRUQ1uYXNkYXFfc3ltYm9sas_bytes();
        let prod_acct = pyth_client::load_product( &prod_data ).unwrap();
        // prediction_record.pyth_price_public_key = prod_acct.px_acc.val;
        prediction_record.entry_price = 100;

        Ok(())
    }
}

#[derive(Accounts)]
pub struct CreatePrediction<'info> {
    #[account(init, payer = user, space = 64 + 64)]
    pub prediction_record: Account<'info, PredictionRecord>,

    #[account(mut)] 
    // [TODO] Figure out how to introduce Pyth Network account address
    // pub asset_price_record: Account<'info, pyth_client::PriceInfo>,    

    pub user: Signer<'info>,
    pub system_program: Program<'info, System>,
}

#[derive(Accounts)]
pub struct ValidatePrediction<'info> {
    #[account(mut)]
    pub prediction_record: Account<'info, PredictionRecord>,

    // [TODO] Figure out how to introduce Pyth Network account address
    // pub asset_price_record: Account<'info, pyth_client::PriceInfo>,

    pub user: Signer<'info>,
    pub system_program: Program<'info, System>,
}



#[account]
pub struct PredictionRecord {
    pub direction: u64,
    pub asset: String,
    pub is_correct:bool,
    pub expiry_date: i64,
    pub pyth_product_public_key: u64,
    pub pyth_price_public_key: [u8; 32],
    pub validation_date: i64,
    pub entry_price: i64,
    pub validation_price: i64,
}
